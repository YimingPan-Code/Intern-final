@model BobBookstore.Models.ViewModels.PaginationModel
@{
    ViewData["Title"] = "Index";
}


<h2>Search</h2>

<p>Books</p>

<form asp-controller="Search" asp-action="Index" method="get">
    <p>
        <select id="selectId" class="col-2 custom-select" name="SortBy" onchange="javascript:this.form.submit()">
            <option value="Name">Name</option>
            <option value="Genre">Genre</option>
            <option value="Type">Type</option>
            <option value="PriceAsc">Price (ascending)</option>
            <option value="PriceDesc">Price (descending)</option>
        </select>
        <input type="text" name="SearchString" value="@ViewBag.currentFilter" />
        <input type="submit" value="Search" />
    </p>
</form>

@if (Model == null)
{
    <h3>
        No results found.
    </h3>
}
else
{
    <table class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Author
                </th>
                <th>
                    ISBN
                </th>
                <th>
                    Genre
                </th>
                <th>
                    Type
                </th>
                <th>
                    Available from
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelitem => item.BookName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.ISBN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GenreName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.TypeName)
                    </td>
                    @if (item.Prices.Count == 0)
                    {
                        <td> None in stock </td>
                    }
                    else
                    {
                        <td> Available from $@item.MinPrice</td>
                    }


                    <td>
                        <form asp-controller="Search" asp-action="Detail" method="get">
                            <input type="hidden" name="id" value="@item.BookId" />
                            <input type="submit" value="details" />
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <div>
        <ul class="pagination">
            @for (var i = 1; i <= (int)Math.Ceiling(Model.Count / 10.0); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a asp-route-page="@i" asp-route-sortBy="@ViewBag.CurrentSort" asp-route-searchstring="@ViewBag.currentFilter" class="page-link">@i</a>
                </li>
            }
        </ul>
    </div>
}


